#!/bin/sh

aria2c_jobs=16
listfile=

die()
{
	echo "$*" >&2
	exit 1
}

info()
{
	echo "--- $*"
}

cleanup()
{
	[ -f "$listfile" ] && {
		rm "$listfile"
		listfile=
	}
}

usage()
{
	echo "update [OPTIONS]"
	echo
	echo "Options:"
	echo " -p|--parallel          Parallel download"
	echo " -f|--full              Full upgrade"
	echo " -d|--download-only     Download only"
	echo " -c|--no-checkrestart   Do not run checkrestart"
}

trap cleanup INT EXIT

parallel=0
full=0
download_only=0
no_checkrestart=0

while [ $# -ge 1 ]; do
	case "$1" in
	-p|--parallel)
		parallel=1
		;;
	-f|--full)
		full=1
		;;
	-d|--download-only)
		download_only=1
		;;
	-c|--no-checkrestart)
		no_checkrestart=1
		;;
	-h|--help)
		usage
		exit 0
		;;
	*)
		die "Unknown parameter: $1"
		;;
	esac
	shift
done

info "Updating package list"
apt-get update || die "Update failed"

[ $full -eq 0 ] && {
	apt_param="upgrade"
} || {
	apt_param="dist-upgrade"
}

if [ $parallel -ne 0 ]; then
	info "Generating package list for '$apt_param'"
	listfile="$(mktemp --tmpdir=/tmp update-files.list.XXXXXXXX)"
	[ -w "$listfile" ] || die "Failed to create temporary file"
	apt-uri-list $apt_param | apturi2metalink > "$listfile" ||\
		die "Failed to generate file list"

	info "Downloading packages"
	while ! aria2c -j "$aria2c_jobs" -s "$aria2c_jobs" -x "$aria2c_jobs" \
			-t 120 -k 1048576 \
			--retry-wait=1 -d /var/cache/apt/archives/ \
			"$listfile"; do
		sleep 10
	done
fi

# Check whether a kernel image will be installed/updated.
kernel_updated=0
apt-get -qq -y --print-uris $apt_param | grep -qe linux-image &&\
	kernel_updated=1

info "Performing '$apt_param'"
dl_flags=
[ $download_only -ne 0 ] && dl_flags="--download-only"
apt-get $dl_flags $apt_param || die "Upgrade failed"

[ $download_only -ne 0 ] && exit 0

[ $full -ne 0 ] && {
	info "Purging old packages"
	apt-get autoremove --purge || die "Autoremove failed"
}

info "Cleaning"
apt-get clean || die "Clean failed"

[ $no_checkrestart -eq 0 ] && which checkrestart >/dev/null 2>&1 && {
	info "Running checkrestart"
	checkrestart || die "checkrestart failed"
}

[ $kernel_updated -ne 0 ] && info "The kernel has been updated!"

exit 0
